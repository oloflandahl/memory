{"version":3,"sources":["actions/gameActions.js","data/constants.js","data/icons.js","helpers/mathHelpers.js","reducers/gameNumbersReducer.js","helpers/cardHelpers.js","reducers/gameStateReducer.js","actions/cardActions.js","reducers/cardsReducer.js","reducers/index.js","components/Input.js","components/StartControls.js","components/Progress.js","components/Stats.js","components/Menu.js","containers/MenuContainer.js","components/Card.js","helpers/timeHelpers.js","components/DoneItem.js","components/DoneBox.js","components/Cards.js","containers/CardsContainer.js","components/Game.js","App.js","index.js"],"names":["toggleLockGame","lock","type","limits","minNoOfCards","maxNoOfCards","minNoOfMatches","maxNoOfMatches","initialGameNumbers","noOfCards","noOfMatches","isValid","initialGameState","isStarted","isLocked","isDone","noOfSuccesses","noOfFails","initialCardState","id","name","icon","isActive","noStats","icons","react_default","a","createElement","ti","isBetween","val","min","max","getValueBetween","Math","limitsAndValidation","state","noOfIcons","length","updatedLimits","Object","assign","gameNumbersReducer","newState","arguments","undefined","action","createCard","i","createCards","cards","push","array","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","initCards","abs","getNoOfCards","toggleCardActive","card","getNoOfCardsWithIcon","filter","gameStateReducer","startTime","Date","cardsReducer","map","toggleCardDone","cardIcon","gameReducers","combineReducers","gameNumbers","gameState","CustomInput","this","setValue","props","value","step","onChange","target","className","onClick","onDecrement","bind","minus_default","readOnly","onIncrement","plus_default","React","Component","StartControls","_ref","showStartControls","onChangeNoOfCards","onChangeNoOfMatches","components_Input","th_default","clone_default","Progress","isGameActive","noOfUsedIcons","progressStyle","width","style","Stats","Menu","onStartGame","onRestartGame","button","stop_default","disabled","play_default","components_StartControls","src_components_Progress","src_components_Stats","MenuContainer","connect","dispatch","ownProps","event","parseInt","setNoOfCards","setNoOfMatches","startGame","Card","size","toWhole","x","toRest","withPad","substring","DoneItem","children","area","color","text","areaStyle","gridArea","DoneBox","doneStats","onCloseDoneBoxClick","time","sec","toString","join","getTimeText","seconds","box","src_components_DoneItem","check_default","close_default","clock_o_default","Cards","onCardClick","cardsMarkup","src_components_Card","key","src_components_DoneBox","CardsContainer","endTime","percentage","ceil","sqrt","getMaxPercentageSize","round","height","getState","_getState","getCard","activateCard","activeCards","getActiveCards","setTimeout","flipCard","Game","containers_MenuContainer","containers_CardsContainer","store","createStore","allReducers","applyMiddleware","ReduxThunk","App","react_redux_es","src_components_Game","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2c1c64e6.chunk.js","sourcesContent":["// Action types\n\nexport const SET_NO_OF_CARDS = 'SET_NO_OF_CARDS';\nexport const SET_NO_OF_MATCHES = 'SET_NO_OF_MATCHES';\nexport const START_GAME = 'START_GAME';\nexport const END_GAME = 'END_GAME';\nexport const CLEAR_STATE = 'CLEAR_STATE';\nexport const TOGGLE_LOCK_GAME = 'TOGGLE_LOCK_GAME';\n\n\n// Action creators\n\nexport const setNoOfCards = (noOfCards) => ({\n  type: SET_NO_OF_CARDS,\n  noOfCards\n});\n\nexport const setNoOfMatches = (noOfMatches) => ({\n  type: SET_NO_OF_MATCHES,\n  noOfMatches\n});\n\nexport const startGame = (noOfCards, noOfMatches) => ({ \n  type: START_GAME, \n  noOfCards, \n  noOfMatches \n});\n\nexport const endGame = () => ({ \n  type: END_GAME\n});\n\nexport const clearState = () => ({ \n  type: CLEAR_STATE\n});\n\nexport const toggleLockGame = lock => ({\n  type: TOGGLE_LOCK_GAME,\n  lock\n});","export const defaultNoOfCards = 16;\nexport const defaultNoOfMatches = 2;\nexport const defaultSuccessLockTimeMs = 500;\nexport const defaultFailLockTimeMs = 2000;\n\nexport const limits = {\n  minNoOfCards: 2,\n  maxNoOfCards: 20,\n  minNoOfMatches: 2,\n  maxNoOfMatches: 5\n};\n\nexport const initialGameNumbers = {\n  noOfCards: defaultNoOfCards,\n  noOfMatches: defaultNoOfMatches,\n  limits: limits,\n  isValid: true\n};\n\nexport const initialGameState = { \n  isStarted: false, \n  isLocked: false, \n  isDone: false,\n  noOfSuccesses: 0,\n  noOfFails: 0\n};\n\nexport const initialCardState = { \n  id: null,\n  name: null,\n  icon: null,\n  isActive: false, \n  isDone: false,\n  noStats: false\n};","// http://s-ings.com/typicons/\nimport React from 'react';\nimport * as Typicons from 'react-icons/lib/ti'\n\nconst icons = [\n  <Typicons.TiFlash />,\n  <Typicons.TiHeart />,\n  <Typicons.TiAnchor />,\n  <Typicons.TiHome />,\n  <Typicons.TiFlag />,\n  <Typicons.TiKey />,\n  <Typicons.TiCog />,\n  <Typicons.TiHeadphones />,\n  <Typicons.TiPen />,\n  <Typicons.TiLockClosed />,\n  <Typicons.TiNotes />,\n  <Typicons.TiGift />,\n  <Typicons.TiBell />,\n  <Typicons.TiLeaf />\n];\n\nexport { icons };","\nexport const isBetween = (val, min, max) => {\n  return min <= val && val <= max; \n};\n\nexport const getValueBetween = (val, min, max) => {\n  val = Math.min(val, max);\n  return Math.max(val, min);\n};\n\nexport const getMaxPercentageSize = (noOfCards) => {\n  const noOfCardsInEachDirection = Math.ceil(Math.sqrt(noOfCards));\n  return 100 / noOfCardsInEachDirection;\n};\n\nexport const getWholeSeconds = (startTime, endTime) => {\n  return Math.round((endTime - startTime) / 1000);\n};","import { END_GAME, SET_NO_OF_CARDS, SET_NO_OF_MATCHES } from '../actions/gameActions';\nimport { initialGameNumbers, limits } from '../data/constants';\nimport { icons } from '../data/icons';\nimport { getValueBetween, isBetween } from '../helpers/mathHelpers';\n\nconst limitsAndValidation = (state) => {\n  let noOfCards = state.noOfCards;\n  let noOfMatches = state.noOfMatches;\n  const noOfIcons = icons.length;\n\n  noOfMatches = getValueBetween(noOfMatches, limits.minNoOfMatches, limits.maxNoOfMatches);\n  noOfCards = getValueBetween(noOfCards, limits.minNoOfCards, limits.maxNoOfCards);\n  noOfCards -= (noOfCards % noOfMatches);\n\n  const updatedLimits = Object.assign({}, limits, {\n    minNoOfCards: Math.min(limits.minNoOfCards, noOfMatches),\n    maxNoOfCards: Math.min(limits.maxNoOfCards, noOfMatches * noOfIcons)\n  });\n\n  if (!noOfCards) {\n    noOfCards = noOfMatches;\n  }\n  const isValid = \n    isBetween(noOfCards, updatedLimits.minNoOfCards, updatedLimits.maxNoOfCards) && \n    isBetween(noOfMatches, updatedLimits.minNoOfMatches, updatedLimits.maxNoOfMatches) &&\n    noOfCards % noOfMatches === 0;\n\n  return { \n    noOfCards: noOfCards,\n    noOfMatches: noOfMatches,\n    limits: updatedLimits, \n    isValid: isValid \n  };\n};\n\nconst gameNumbersReducer = (state = initialGameNumbers, action) => {\n  let newState;\n  switch(action.type) {\n    case END_GAME:\n      return initialGameNumbers;\n    case SET_NO_OF_CARDS:\n      newState = Object.assign({}, state, { noOfCards: action.noOfCards });\n      return Object.assign(newState, limitsAndValidation(newState));\n    case SET_NO_OF_MATCHES:\n      newState = Object.assign({}, state, { noOfMatches: action.noOfMatches });\n      return Object.assign(newState, limitsAndValidation(newState));\n    default:\n      return state;\n  }\n};\n\nexport default gameNumbersReducer;","import { defaultNoOfCards, defaultNoOfMatches, initialCardState } from '../data/constants';\nimport { icons } from '../data/icons';\n\n\nconst getNoOfCards = (noOfCards, noOfMatches) => {\n  noOfCards = Math.abs(noOfCards);\n  noOfCards -= (noOfCards % noOfMatches);\n  return noOfCards;\n};\n\nconst createCard = (i, noOfIcons) => {\n  return Object.assign({}, initialCardState, { \n    id: i, \n    name: 'Card '+i, // Remove\n    icon: icons[i % noOfIcons] \n  });\n};\n\nconst shuffle = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst createCards = (noOfCards, noOfIcons) => {\n  const cards = [];\n  for (let i = 1; i <= noOfCards; i++) {\n    cards.push(createCard(i, noOfIcons));\n  }\n  return shuffle(cards);\n};\n\nconst initCards = (noOfCards = defaultNoOfCards, noOfMatches = defaultNoOfMatches) => {\n\n  noOfCards = getNoOfCards(noOfCards, noOfMatches);\n\n  let noOfIcons = noOfCards / noOfMatches;\n  if (noOfIcons > icons.length) {\n    noOfIcons = icons.length;\n    noOfCards = noOfIcons * noOfMatches;\n  }\n\n  return createCards(noOfCards, noOfIcons);\n};\n\nconst toggleCardActive = (card, isActive) => { \n  isActive = (card.isDone ? false : isActive) || false;\n  return Object.assign({}, card, { isActive: isActive }); \n};\n\nconst toggleCardDone = (card, isDone) => {\n  const isActive = isDone ? false : card.isActive;\n  return Object.assign({}, card, { isDone: isDone || false, isActive: isActive });\n};\n\nconst getCard = (cards, id) => ( cards.filter(card => card.id === id)[0] );\nconst getActiveCards = cards => ( cards.filter(card => card.isActive) );\nconst getNoOfCardsWithIcon = (cards, icon) => ( cards.filter(card => card.icon === icon).length );\n\n\nexport { initCards, toggleCardActive, toggleCardDone, getCard, getActiveCards, getNoOfCardsWithIcon };","import { START_GAME, END_GAME, CLEAR_STATE, TOGGLE_LOCK_GAME } from '../actions/gameActions';\nimport { DEACTIVATE_CARDS, CARD_ICON_TO_DONE } from '../actions/cardActions';\nimport { initialGameState } from '../data/constants';\n\nconst gameStateReducer = (state = initialGameState, action) => {\n  switch(action.type) {\n    case START_GAME: \n      return Object.assign({}, initialGameState, { isStarted: true, startTime: new Date() });\n    case END_GAME: \n      return Object.assign({}, state, { isStarted: false, isDone: false });\n    case CLEAR_STATE: \n      return Object.assign({}, state, { noStats: true });\n    case TOGGLE_LOCK_GAME: \n      return Object.assign({}, state, { isLocked: action.lock || false });\n    case DEACTIVATE_CARDS:\n      return Object.assign({}, state, { noOfFails: state.noOfFails + 1  });\n    case CARD_ICON_TO_DONE:\n      return Object.assign({}, state, { noOfSuccesses: state.noOfSuccesses + 1  });\n    default:\n      return state;\n  }\n};\n\nexport default gameStateReducer;","import { defaultSuccessLockTimeMs, defaultFailLockTimeMs } from '../data/constants';\nimport { getCard, getActiveCards, getNoOfCardsWithIcon } from '../helpers/cardHelpers';\nimport { toggleLockGame } from './gameActions';\n\n\n// Action types\n\nexport const ACTIVATE_CARD = 'ACTIVATE_CARD';\nexport const DEACTIVATE_CARDS = 'DEACTIVATE_CARDS';\nexport const CARD_ICON_TO_DONE = 'CARD_ICON_TO_DONE';\n\n\n// Action creators\n\nexport const activateCard = id => ({\n  type: ACTIVATE_CARD, \n  id\n});\n\nexport const deactivateCards = () => ({\n  type: DEACTIVATE_CARDS\n});\n\nexport const setCardIconToDone = cardIcon => ({\n  type: CARD_ICON_TO_DONE, \n  cardIcon\n});\n\nexport const flipCard = id => {\n  return (dispatch, getState) => {\n    const { gameState, cards } = getState();\n\n    if (gameState.isLocked || !gameState.isStarted) {\n      return;\n    }\n\n    const card = getCard(cards, id);\n    if (card.isActive) {\n      return;\n    }\n\n    dispatch(activateCard(id));\n\n    const noOfMatches = getNoOfCardsWithIcon(cards, card.icon);\n    const activeCards = getActiveCards(cards);\n    if (activeCards.length === noOfMatches - 1) {\n      dispatch(toggleLockGame(true));\n      if (getNoOfCardsWithIcon(activeCards, card.icon) === noOfMatches - 1) {\n        setTimeout(() => {\n          dispatch(toggleLockGame(false));\n          dispatch(setCardIconToDone(card.icon));\n        }, defaultSuccessLockTimeMs);\n      } else {\n        setTimeout(() => {\n          dispatch(toggleLockGame(false));\n          dispatch(deactivateCards());\n        }, defaultFailLockTimeMs);\n      }\n    }\n\n  };\n};","import { START_GAME, END_GAME } from '../actions/gameActions';\nimport { ACTIVATE_CARD, DEACTIVATE_CARDS, CARD_ICON_TO_DONE } from '../actions/cardActions';\nimport { initCards, toggleCardActive, toggleCardDone } from '../helpers/cardHelpers';\n\nconst cardsReducer = (state = [], action) => {\n  switch(action.type) {\n    case START_GAME:\n      return initCards(action.noOfCards, action.noOfMatches);\n    case END_GAME:\n      return [];\n    case ACTIVATE_CARD:\n      return state.map(card => toggleCardActive(card, card.isActive || card.id === action.id));\n    case DEACTIVATE_CARDS:\n      return state.map(card => toggleCardActive(card, false));\n    case CARD_ICON_TO_DONE:\n      return state.map(card => toggleCardDone(card, card.isDone || card.icon === action.cardIcon));\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;","import { combineReducers } from 'redux';\nimport gameNumbers from './gameNumbersReducer';\nimport gameState from './gameStateReducer';\nimport cards from './cardsReducer';\n\n\nconst gameReducers = combineReducers({ gameNumbers, gameState, cards });\n\nexport default gameReducers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FaPlus from 'react-icons/lib/fa/plus';\nimport FaMinus from 'react-icons/lib/fa/minus';\nimport './Input.css';\n\nclass CustomInput extends React.Component {\n\n  onDecrement() {\n    this.setValue(this.props.value - this.props.step);\n  }\n\n  onIncrement() {\n    this.setValue(this.props.value + this.props.step);\n  }\n\n  setValue(value) {\n    this.props.onChange({\n      target: {\n        value: value \n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"input-container\">\n        <label>{this.props.icon}</label>\n        <div className=\"input-content\">\n          <span className=\"icon\" onClick={this.onDecrement.bind(this)}><FaMinus /></span>\n          <input type=\"number\" value={this.props.value} onChange={this.props.onChange} min={this.props.min} max={this.props.max} step={this.props.step} readOnly />\n          <span className=\"icon\" onClick={this.onIncrement.bind(this)}><FaPlus /></span>\n        </div>\n      </div>\n    );\n  }\n}\n\nCustomInput.propTypes = {\n  icon: PropTypes.object.isRequired,\n  value: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default CustomInput;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FaClone from 'react-icons/lib/fa/clone';\nimport FaTh from 'react-icons/lib/fa/th';\nimport Input from './Input';\n\nconst StartControls = ({ showStartControls, gameNumbers, onChangeNoOfCards, onChangeNoOfMatches }) => {\n\n  return showStartControls ? (\n    <div>\n      <Input icon={(<FaTh />)} value={gameNumbers.noOfCards} onChange={onChangeNoOfCards} min={gameNumbers.noOfMatches} max={gameNumbers.limits.maxNoOfCards} step={gameNumbers.noOfMatches} />\n      <Input icon={(<FaClone />)} value={gameNumbers.noOfMatches} onChange={onChangeNoOfMatches} min={gameNumbers.limits.minNoOfMatches} max={gameNumbers.limits.maxNoOfMatches} step={1} />\n    </div>\n  ) : null;\n\n};\n\nStartControls.propTypes = {\n  showStartControls: PropTypes.bool.isRequired,\n  gameNumbers: PropTypes.shape({\n    noOfCards: PropTypes.number.isRequired,\n    noOfMatches: PropTypes.number.isRequired\n  }).isRequired,\n  onChangeNoOfCards: PropTypes.func.isRequired,\n  onChangeNoOfMatches: PropTypes.func.isRequired\n};\n\nexport default StartControls;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Progress.css';\n\nconst Progress = ({ isGameActive, noOfUsedIcons, gameState }) => {\n\n  const progressStyle = { width: (100 * gameState.noOfSuccesses / noOfUsedIcons) + '%' };\n  return isGameActive ? (\n    <div className=\"progress-container\">\n      <div className=\"progress\" style={progressStyle}></div>\n    </div>\n  ) : null;\n\n};\n\nProgress.propTypes = {\n  isGameActive: PropTypes.bool.isRequired,\n  noOfUsedIcons: PropTypes.number.isRequired,\n  gameState: PropTypes.shape({\n    noOfSuccesses: PropTypes.number.isRequired,\n    noOfFails: PropTypes.number.isRequired\n  }).isRequired\n};\n\nexport default Progress;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Stats.css';\n\nconst Stats = ({ isGameActive, noOfUsedIcons, gameState }) => {\n\n  return isGameActive ? (\n    <div className=\"stats-container\">\n      <span className=\"stat\">{gameState.noOfSuccesses}</span>\n      /\n      <span className=\"stat\">{noOfUsedIcons}</span>\n    </div>\n  ) : null;\n\n};\n\nStats.propTypes = {\n  isGameActive: PropTypes.bool.isRequired,\n  noOfUsedIcons: PropTypes.number.isRequired,\n  gameState: PropTypes.shape({\n    noOfSuccesses: PropTypes.number.isRequired,\n    noOfFails: PropTypes.number.isRequired\n  }).isRequired,\n};\n\nexport default Stats;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FaPlay from 'react-icons/lib/fa/play';\nimport FaStop from 'react-icons/lib/fa/stop';\nimport StartControls from './StartControls';\nimport Progress from './Progress';\nimport Stats from './Stats';\nimport './Menu.css';\n\nconst Menu = ({ showStartControls, isGameActive, gameNumbers, noOfUsedIcons, gameState, onChangeNoOfCards, onChangeNoOfMatches, onStartGame, onRestartGame }) => {\n\n  const button = isGameActive ? ( <span className=\"action-icon\" onClick={onRestartGame.bind(this)}><FaStop /></span> ) : \n    ( <span className=\"action-icon\" onClick={onStartGame.bind(this, gameNumbers.noOfCards, gameNumbers.noOfMatches)} disabled={!gameNumbers.isValid}><FaPlay /></span> );\n\n  return (\n    <div className=\"menu-container\">\n      <div>\n        <StartControls showStartControls={showStartControls} gameNumbers={gameNumbers} onChangeNoOfCards={onChangeNoOfCards} onChangeNoOfMatches={onChangeNoOfMatches} onStartGame={onStartGame} />\n        <Progress isGameActive={isGameActive} noOfUsedIcons={noOfUsedIcons} gameState={gameState} />\n        <Stats isGameActive={isGameActive} gameState={gameState} noOfUsedIcons={noOfUsedIcons} />\n      </div>\n      <div>\n        {button}\n      </div>\n    </div>\n  );\n\n};\n\nMenu.propTypes = {\n  showStartControls: PropTypes.bool.isRequired,\n  isGameActive: PropTypes.bool.isRequired,\n  gameNumbers: PropTypes.shape({\n    noOfCards: PropTypes.number.isRequired,\n    noOfMatches: PropTypes.number.isRequired\n  }).isRequired,\n  noOfUsedIcons: PropTypes.number.isRequired,\n  gameState: PropTypes.shape({\n    noOfSuccesses: PropTypes.number.isRequired,\n    noOfFails: PropTypes.number.isRequired\n  }).isRequired,\n  onChangeNoOfCards: PropTypes.func.isRequired,\n  onChangeNoOfMatches: PropTypes.func.isRequired,\n  onStartGame: PropTypes.func.isRequired,\n  onRestartGame: PropTypes.func.isRequired\n};\n\nexport default Menu;","import { connect } from 'react-redux'\nimport { setNoOfCards, setNoOfMatches, startGame, endGame } from '../actions/gameActions'\nimport Menu from '../components/Menu'\n\nconst mapStateToProps = state => {\n  const gameState = state.gameState;\n  const isStarted = gameState.isStarted;\n  const isDone = gameState.isDone;\n\n  return {\n    showStartControls: !isStarted,\n    isGameActive: isStarted && !isDone,\n    gameState: gameState,\n    gameNumbers: state.gameNumbers,\n    noOfUsedIcons: state.gameNumbers.noOfCards / state.gameNumbers.noOfMatches\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onChangeNoOfCards: (event) => {\n      const noOfCards = parseInt(event.target.value, 10) || 0;\n      dispatch(setNoOfCards(noOfCards));\n    },\n    onChangeNoOfMatches: (event) => {\n      const noOfMatches = parseInt(event.target.value, 10) || 0;\n      dispatch(setNoOfMatches(noOfMatches));\n    },\n    onStartGame: (noOfCards, noOfMatches) => {\n      dispatch(startGame(noOfCards, noOfMatches));\n    },\n    onRestartGame: () => {\n      dispatch(endGame());\n    }\n  };\n};\n\nconst MenuContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Menu);\n\nexport default MenuContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\n\nconst Card = ({onClick, name, isActive, isDone, isLocked, icon, size}) => {\n\n  const isOpen = isActive || isDone;\n  const className = 'card' + \n    (isOpen ? ' open' : '') + \n    (isDone ? ' done' : '') + \n    (isLocked ? ' locked' : '');\n\n  return (\n    <div className=\"card-container\" style={size}>\n      <div className={className} onClick={onClick} >\n        <div className=\"front\">\n          <span className=\"icon\">{icon}</span>\n        </div>\n        <div className=\"back\"></div>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  isDone: PropTypes.bool.isRequired,\n  isLocked: PropTypes.bool.isRequired,\n  icon: PropTypes.object.isRequired,\n  size: PropTypes.shape({\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default Card;","export const getTimeText = sec => {\n  \n  let min = toWhole(sec);\n  sec = toRest(sec);\n  \n  let h = toWhole(min);\n  min = toRest(min);\n  \n  return [h, min, sec]\n    .map(x => withPad(x.toString()))\n    .join(':');\n};\n\nconst toWhole = x => (x ? Math.floor(x / 60) : 0);\nconst toRest = x => (x % 60);\nconst withPad = x => ('00'.substring(0, 2 - x.length) + x);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './DoneItem.css';\n\nconst DoneItem = ({ children, area, color, text }) => {\n  const areaStyle = { \n    gridArea: area,\n    color: color\n  };\n  return (\n    <div className='done-item' style={areaStyle}>{children} <span className=\"done-item-text\">{text}</span></div>\n  );\n};\n\nDoneItem.propTypes = {\n  area: PropTypes.string.isRequired,\n  text: PropTypes.any.isRequired\n};\n\nexport default DoneItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTimeText } from '../helpers/timeHelpers';\nimport DoneItem from './DoneItem';\nimport './DoneBox.css';\n\nimport FaClose from 'react-icons/lib/fa/close';\nimport FaClone from 'react-icons/lib/fa/clone';\nimport FaTh from 'react-icons/lib/fa/th';\nimport FaCheck from 'react-icons/lib/fa/check';\nimport FaClockO from 'react-icons/lib/fa/clock-o';\n\n\nconst DoneBox = ({ doneStats, onCloseDoneBoxClick }) => {\n\n  let className = 'done-box-container';\n  if (doneStats) {\n    className += ' in';\n  } else {\n    doneStats = {};\n  }\n\n  const time = getTimeText(doneStats.seconds);\n\n  const box = doneStats && doneStats.noOfSuccesses ? (\n    <div className=\"done-box\">\n        <div className=\"done-box-inner\">\n          <DoneItem area=\"cards\" text={doneStats.noOfCards}><FaTh /></DoneItem>\n          <DoneItem area=\"matches\" text={doneStats.noOfMatches}><FaClone /></DoneItem>\n          <br />\n          <DoneItem area=\"success\" color=\"#afa\" text={doneStats.noOfSuccesses}><FaCheck /></DoneItem>\n          <DoneItem area=\"fail\" color=\"#faa\" text={doneStats.noOfFails}><FaClose /></DoneItem>\n          <br />\n          <DoneItem area=\"time\" text={time}><FaClockO /></DoneItem>\n        </div>\n        <span className=\"close-icon\" onClick={onCloseDoneBoxClick}><FaClose /></span>\n      </div>\n  ) : null;\n\n  return ( \n    <div className={className}>\n      { box }\n    </div> \n  );\n};\n\nDoneBox.propTypes = {\n  doneStats: PropTypes.object,\n  onCloseDoneBoxClick: PropTypes.func.isRequired\n};\n\nexport default DoneBox;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport DoneBox from './DoneBox';\nimport './Cards.css';\n\nconst Cards = ({ cards, onCardClick, onCloseDoneBoxClick, size, doneStats, isLocked }) => {\n  const cardsMarkup = cards.map((card) => <Card key={card.id} {...card} onClick={() => onCardClick(card.id)} size={size} isLocked={isLocked} />);\n  return (\n    <div className=\"cards-container\"><DoneBox doneStats={doneStats} onCloseDoneBoxClick={onCloseDoneBoxClick} />{cardsMarkup}</div>\n  );\n};\n\nCards.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isActive: PropTypes.bool.isRequired,\n      isDone: PropTypes.bool.isRequired,\n      icon: PropTypes.object.isRequired\n    }).isRequired\n  ).isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  onCloseDoneBoxClick: PropTypes.func.isRequired,\n  doneStats: PropTypes.object,\n  isLocked: PropTypes.bool.isRequired,\n  size: PropTypes.shape({\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default Cards;","import { connect } from 'react-redux'\nimport { getMaxPercentageSize, getWholeSeconds } from '../helpers/mathHelpers'\nimport { flipCard } from '../actions/cardActions'\nimport { clearState } from '../actions/gameActions';\nimport Cards from '../components/Cards'\n\nconst mapStateToProps = state => {\n  const noOfCards = state.cards.length;\n  const percentage = getMaxPercentageSize(noOfCards) + '%';\n  const isDone = noOfCards > 0 && state.cards.filter(card => card.isDone).length === noOfCards;\n  const doneStats = isDone && !state.gameState.noStats ? Object.assign({}, state.gameNumbers, state.gameState, { seconds: getWholeSeconds(state.gameState.startTime, new Date()) }) : null;\n  return {\n    cards: state.cards,\n    doneStats: doneStats,\n    isLocked: state.gameState.isLocked,\n    size: {\n      width: percentage,\n      height: percentage\n    }\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onCardClick: id => {\n      dispatch(flipCard(id));\n    },\n    onCloseDoneBoxClick: () => {\n      dispatch(clearState());\n    }\n  }\n};\n\nconst CardsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cards);\n\nexport default CardsContainer;","import React from 'react';\nimport MenuContainer from '../containers/MenuContainer';\nimport CardsContainer from '../containers/CardsContainer';\nimport './Game.css';\n\n\nconst Game = () => (\n  <div className=\"container\">\n    <MenuContainer></MenuContainer>\n    <CardsContainer></CardsContainer>\n  </div>\n);\n\nexport default Game;","import React, { Component } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport allReducers from './reducers/';\nimport Game from './components/Game';\nimport './App.css';\n\nconst store = createStore(\n  allReducers,\n  applyMiddleware(ReduxThunk)\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Game />\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}